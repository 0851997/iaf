<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation=
		"
		http://www.springframework.org/schema/beans xml/xsd/spring-beans-2.5.xsd
		http://www.springframework.org/schema/util xml/xsd/spring-util-2.5.xsd
		"
	>

	<!-- Transaction stuff -->
	<!-- In order to properly handle 'Propagation: Supports', set property
		 'transactionSynchronization' to 'Synchronize on actual transaction'. -->

	<!-- Use Spring DataSourceTransactionManager which is good enough in case
		 only one data source needs to be managed by the transaction manager.
		 Otherwise a transaction manager like Atomikos, Bitronix or JOTM needs
		 to be used (will need some integration with Tomcat). In case no
		 database is needed the DataSourceTransactionManager can be used in
		 combination with an in-memory database like H2. -->
	<bean id="txManagerReal" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource">
			<ref bean="defaultDataSource"/>
		</property>
		<property name="transactionSynchronization">
			<util:constant static-field="org.springframework.transaction.support.AbstractPlatformTransactionManager.SYNCHRONIZATION_ON_ACTUAL_TRANSACTION"/>
		</property>
	</bean>
	<bean id="defaultDataSource" class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
		<property name="targetDataSource">
			<bean class="org.springframework.jndi.JndiObjectFactoryBean">
				<property name="jndiName" value="java:comp/env/jdbc/${instance.name.lc}"/>
			</bean>
		</property>
	</bean>
	<!-- Make the proxied data source available to the JdbcFacade -->
	<bean id="proxiedDataSources" class="java.util.HashMap">
		<constructor-arg>
			<map>
				<entry key="jdbc/${instance.name.lc}">
					<ref bean="defaultDataSource"/>
				</entry>
			</map>
		</constructor-arg>
	</bean>

	<bean
		name="jndiContextPrefixPropertyPlaceholderConfigurer"
		class="nl.nn.adapterframework.configuration.OverwritePropertyPlaceholderConfigurer"
		autowire="byName"
		>
		<property name="propertyName" value="jndiContextPrefix"/>
		<property name="propertyValue" value="java:comp/env/"/>
	</bean>

</beans>
